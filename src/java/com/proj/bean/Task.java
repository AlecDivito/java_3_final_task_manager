package com.proj.bean;
// Generated Nov 20, 2016 9:57:49 PM by Hibernate Tools 4.3.1


import java.util.Comparator;
import java.util.HashSet;
import java.util.Set;

/**
 * Task generated by hbm2java
 */
public class Task  implements java.io.Serializable, Comparable<Task> {


     private int taskid;
     private Project project;
     private String tasktitle;
     private Set<SubTask> subTasks = new HashSet<SubTask>(0);

    public Task() {
    }

	
    public Task(int taskid, Project project, String tasktitle) {
        this.taskid = taskid;
        this.project = project;
        this.tasktitle = tasktitle;
    }
    public Task(int taskid, Project project, String tasktitle, Set<SubTask> subTasks) {
       this.taskid = taskid;
       this.project = project;
       this.tasktitle = tasktitle;
       this.subTasks = subTasks;
    }
   
    public int getTaskid() {
        return this.taskid;
    }
    
    public void setTaskid(int taskid) {
        this.taskid = taskid;
    }
    public Project getProject() {
        return this.project;
    }
    
    public void setProject(Project project) {
        this.project = project;
    }
    public String getTasktitle() {
        return this.tasktitle;
    }
    
    public void setTasktitle(String tasktitle) {
        this.tasktitle = tasktitle;
    }
    public Set<SubTask> getSubTasks() {
        return this.subTasks;
    }
    
    public void setSubTasks(Set<SubTask> subTasks) {
        this.subTasks = subTasks;
    }

    @Override
    public int compareTo(Task o) {
        // TODO: Handle null x or y values
        int startComparison = compare(this.taskid, o.taskid);
        return startComparison != 0 ? startComparison
                                    : compare(this.taskid, o.taskid);
    }

    // I don't know why this isn't in Long...
    private static int compare(long a, long b) {
        return a < b ? -1
             : a > b ? 1
             : 0;
    }
}


